# Generated by Django 5.1.1 on 2025-01-05 11:42

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('services', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DiscountInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('send_cost', models.BooleanField(default=False, verbose_name='تمایل به پرداخت هزینه ارسال')),
                ('is_faculty_member', models.BooleanField(default=False, verbose_name='آیا کاربر عضو هیات علمی است؟')),
                ('is_student_or_staff', models.BooleanField(default=False, verbose_name='آیا کاربر دانشجو یا کارکنان دانشگاه است؟')),
                ('is_affiliated_with_institution', models.BooleanField(default=False, verbose_name='آیا کاربر متقاضی استفاده از تخفیف نهادهای طرف قرارداد است؟')),
                ('contract_party_file', models.FileField(blank=True, null=True, upload_to='contract_party_files/', verbose_name='فایل نهاد تخفیف')),
                ('has_labs_net_grant', models.BooleanField(default=False, verbose_name='آیا کاربر دارای گرنت شبکه آزمایشگاهی است؟')),
                ('labs_net_file', models.FileField(blank=True, null=True, upload_to='labs_net_files/', verbose_name='فایل گرنت شبکه آزمایشگاهی')),
                ('has_research_grant', models.BooleanField(default=False, verbose_name='آیا کاربر دارای گرنت پژوهشی است؟')),
                ('research_grant_withdrawal_amount', models.PositiveIntegerField(blank=True, null=True, verbose_name='میزان استفاده از گرنت پژوهشی')),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.experiment', verbose_name='آزمایش')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='کاربر')),
            ],
        ),
        migrations.CreateModel(
            name='RequestInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submission_date', models.DateField(auto_now_add=True, verbose_name='تاریخ ثبت درخواست')),
                ('description', models.TextField(blank=True, null=True, verbose_name='توضیحات')),
                ('order_code', models.CharField(blank=True, max_length=255, unique=True, verbose_name='کد سفارش')),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.experiment', verbose_name='آزمایش')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='کاربر')),
            ],
        ),
        migrations.CreateModel(
            name='SampleInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sample_type', models.CharField(max_length=50, verbose_name='نوع نمونه')),
                ('customer_sample_name', models.CharField(max_length=255, verbose_name='نام نمونه مشتری')),
                ('sample_count', models.PositiveIntegerField(verbose_name='تعداد نمونه')),
                ('storage_conditions', models.TextField(blank=True, null=True, verbose_name='شرایط نگهداری')),
                ('sample_description', models.TextField(blank=True, null=True, verbose_name='توضیحات نمونه')),
                ('file_upload', models.FileField(blank=True, null=True, upload_to='sample_files/', verbose_name='فایل تکمیلی نمونه')),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.experiment', verbose_name='آزمایش')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='کاربر')),
            ],
        ),
        migrations.CreateModel(
            name='TemporaryDiscountInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('send_cost', models.BooleanField(default=False, verbose_name='تمایل به پرداخت هزینه ارسال')),
                ('is_faculty_member', models.BooleanField(default=False, verbose_name='آیا کاربر عضو هیات علمی است؟')),
                ('is_student_or_staff', models.BooleanField(default=False, verbose_name='آیا کاربر دانشجو یا کارکنان دانشگاه است؟')),
                ('is_affiliated_with_institution', models.BooleanField(default=False, verbose_name='آیا کاربر متقاضی استفاده از تخفیف نهادهای طرف قرارداد است؟')),
                ('contract_party_file', models.FileField(blank=True, null=True, upload_to='contract_party_files/', verbose_name='فایل نهاد تخفیف')),
                ('has_labs_net_grant', models.BooleanField(default=False, verbose_name='آیا کاربر دارای گرنت شبکه آزمایشگاهی است؟')),
                ('labs_net_file', models.FileField(blank=True, null=True, upload_to='labs_net_files/', verbose_name='فایل گرنت شبکه آزمایشگاهی')),
                ('has_research_grant', models.BooleanField(default=False, verbose_name='آیا کاربر دارای گرنت پژوهشی است؟')),
                ('research_grant_withdrawal_amount', models.PositiveIntegerField(blank=True, null=True, verbose_name='میزان استفاده از گرنت پژوهشی')),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.experiment', verbose_name='آزمایش')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='کاربر')),
            ],
        ),
        migrations.CreateModel(
            name='TemporaryRequestInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submission_date', models.DateField(auto_now_add=True, verbose_name='تاریخ ثبت درخواست')),
                ('description', models.TextField(blank=True, null=True, verbose_name='توضیحات')),
                ('order_code', models.CharField(blank=True, max_length=255, unique=True, verbose_name='کد سفارش')),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.experiment', verbose_name='آزمایش')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='کاربر')),
            ],
        ),
        migrations.CreateModel(
            name='TemporarySampleInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sample_type', models.CharField(max_length=50, verbose_name='نوع نمونه')),
                ('customer_sample_name', models.CharField(max_length=255, verbose_name='نام نمونه مشتری')),
                ('sample_count', models.PositiveIntegerField(verbose_name='تعداد نمونه')),
                ('storage_conditions', models.TextField(blank=True, null=True, verbose_name='شرایط نگهداری')),
                ('sample_description', models.TextField(blank=True, null=True, verbose_name='توضیحات نمونه')),
                ('file_upload', models.FileField(blank=True, null=True, upload_to='sample_files/', verbose_name='فایل تکمیلی نمونه')),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.experiment', verbose_name='آزمایش')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='کاربر')),
            ],
        ),
        migrations.CreateModel(
            name='TemporaryTestInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repeat_count_test', models.PositiveIntegerField(verbose_name='تعداد تکرار آزمون')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ به\u200cروزرسانی')),
                ('parameter_values', models.JSONField(verbose_name='مقادیر پارامتر')),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.experiment', verbose_name='آزمایش')),
                ('parameter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.parameters', verbose_name='پارامتر')),
                ('test', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='services.test', verbose_name='عنوان آزمایش')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='کاربر')),
                ('user_sample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orders.temporarysampleinfo', verbose_name='شناسه نمونه آزمایش')),
            ],
        ),
        migrations.CreateModel(
            name='TemporaryOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_complete', models.BooleanField(default=False, verbose_name='تکمیل شده')),
                ('discount_info', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='orders.temporarydiscountinfo', verbose_name='اطلاعات تخفیف')),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.experiment', verbose_name='آزمایش')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='کاربر')),
                ('request_info', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='orders.temporaryrequestinfo', verbose_name='اطلاعات درخواست')),
                ('sample_info', models.ManyToManyField(related_name='requests', to='orders.temporarysampleinfo', verbose_name='اطلاعات نمونه')),
                ('test_info', models.ManyToManyField(to='orders.temporarytestinfo', verbose_name='اطلاعات آزمایش')),
            ],
        ),
        migrations.CreateModel(
            name='TestInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repeat_count_test', models.PositiveIntegerField(verbose_name='تعداد تکرار آزمون')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ به\u200cروزرسانی')),
                ('parameter_values', models.JSONField(verbose_name='مقادیر پارامتر')),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.experiment', verbose_name='آزمایش')),
                ('parameter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.parameters', verbose_name='پارامتر')),
                ('test', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='services.test', verbose_name='عنوان آزمایش')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='کاربر')),
                ('user_sample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orders.temporarysampleinfo', verbose_name='شناسه نمونه آزمایش')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('final_price', models.DecimalField(blank=True, decimal_places=0, default=0, max_digits=10, null=True, verbose_name='قیمت نهایی')),
                ('is_complete', models.BooleanField(blank=True, default=False, null=True, verbose_name='تکمیل شده')),
                ('invoice_pdf', models.FileField(blank=True, null=True, upload_to='invoices/', verbose_name='پیش فاکتور')),
                ('status', models.CharField(blank=True, choices=[('pending', 'در حال بررسی'), ('successful', 'پرداخت موفق'), ('failed', 'پرداخت ناموفق'), ('canceled', 'لغو شده'), ('ready_for_payment', 'آماده پرداخت')], default='pending', max_length=20, null=True, verbose_name='وضعیت')),
                ('discount_info', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='orders.discountinfo', verbose_name='اطلاعات تخفیف')),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.experiment', verbose_name='آزمایش')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='کاربر')),
                ('request_info', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='orders.requestinfo', verbose_name='اطلاعات درخواست')),
                ('sample_info', models.ManyToManyField(related_name='requests', to='orders.sampleinfo', verbose_name='اطلاعات نمونه')),
                ('test_info', models.ManyToManyField(to='orders.testinfo', verbose_name='اطلاعات آزمایش')),
            ],
        ),
    ]
